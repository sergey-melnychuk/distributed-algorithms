apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'jacoco'

jacoco {
    applyTo junitPlatformTest
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
    }
}

repositories {
    mavenCentral()
}

junitPlatform {
    platformVersion '1.0.0'
    logManager 'org.apache.logging.log4j.jul.LogManager'
    reportsDir file('build/test-results/junit-platform')
}

junitPlatformTest {
    jacoco {
        destinationFile = file("${buildDir}/jacoco/test.exec")
    }
}

ext.log4jVersion        = '2.9.1'
ext.junitJupiterVersion = '5.0.1'

dependencies {
    compile("org.apache.logging.log4j:log4j-api:${log4jVersion}")
    compile("org.apache.logging.log4j:log4j-core:${log4jVersion}")

    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
    testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")
    testCompile("org.apiguardian:apiguardian-api:1.0.0") // avoid warnings during tests compilation
}

task wrapper(type: Wrapper) {
    description = 'Generates gradlew[.bat] scripts'
    gradleVersion = '4.3.1'
}

mainClassName = "edu.membership.RemoteNode"
